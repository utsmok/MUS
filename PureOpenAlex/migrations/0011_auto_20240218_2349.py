# Generated by Django 5.0.2 on 2024-02-18 22:49
# modified by Samuel Mok


from django.db import migrations
from collections import defaultdict
from django.db import transaction


MATCHURLCONTENT = {
    "library.itc.utwente.nl": "itc_library",
    "arxiv": "arxiv",
    "zenodo": "zenodo",
    "github": "github",
    "https://10.": "doi",
    "http://10.": "doi",
}
def move_identifier_data(apps, schema_editor):
    '''
        Move data from          Identifier
        To                      PureEntry

        PureEntry has manytomany relationship with Identifier.
        Loop through all PureEntries.
        
        For each PureEntry, loop through all related identifiers.
        Identifier has 2 fields: url and idtype. 

        Get the idtype of the identifier to decide where to move the 'url' field of identifier:

                idtype                  PureEntry field
            ---------------         -----------------------
            
                doi                    PureEntry.doi
                isbn                   PureEntry.isbn
                researchutwente        PureEntry.researchutwente
                risutwente             PureEntry.risutwente
                scopus                 PureEntry.scopus
                
                other                  see below

            for items with idtype other add them to other_links in PureEntry.
            other_links is a JSONfield. The json is a dict with lists:
            so each key holds a list with all urls that match that key.

            If idtype is other, check if the url contains the text in the left column
            if so, use the key in the right column
            note: the doi field is the one in the table above, not in the json field

                if text in url:                 json key:
            ------------------------        -----------------------
            library.itc.utwente.nl              itc_library
                arxiv                            arxiv
                zenodo                           zenodo
                github                           github
            http://10. or https://10.           use the doi field! (fix the doi by stripping http(s):// and/or adding doi.org)
                
            Then we have 2 special cases left. Both should be added to the json, like so:
                Case:                              do:
            ------------------------              ------------------------
    duplicate items for non-other idtypes         duplicate_{type}; e.g. duplicate_doi or duplicate_isbn
                the rest:                         use the 'other' key in json
'''

    PureEntry = apps.get_model("PureOpenAlex", "PureEntry")
    bulklist=[]
    for entry in PureEntry.objects.all().filter(identifiers__isnull=False).only('doi', 'isbn', 'researchutwente', 'risutwente', 'scopus', 'other_links','id').prefetch_related("identifiers"):
        bulklist.append(entry)
        MATCHIDTYPES = {
        "doi": entry.doi,
        "isbn": entry.doi,
        "researchutwente": entry.doi,
        "risutwente": entry.doi,
        "scopus": entry.doi
        }
        entry.other_links= defaultdict(list)
        for identifier in entry.identifiers.all():
            duplicate=False
            if identifier.idtype in MATCHIDTYPES.keys():
                PureEntryField=MATCHIDTYPES[identifier.idtype]
                if PureEntryField:
                    if PureEntryField != "" and PureEntryField != None:
                        PureEntryField = identifier.url
                    else:
                        duplicate=True
                else:
                    duplicate=True

                if duplicate:
                    entry.other_links['duplicate_'+str(identifier.idtype)].append(identifier.url)
            else:
                matched=False
                for key, value in MATCHURLCONTENT.items():
                    if key in identifier.url and not matched:
                        if value != "doi":
                            entry.other_links[value].append(identifier.url)
                            matched=True
                        else: # doi with wrong formatting found
                            if 'http://' in str(identifier.url) and not 'doi.org' in str(identifier.url):
                                founddoi=str(identifier.url).replace('http://', 'https://doi.org')
                            elif 'https://' in str(identifier.url) and not 'doi.org' in str(identifier.url):
                                founddoi=str(identifier.url).replace('https://', 'doi.org')
                            else:
                                founddoi=str(identifier.url)
                            if not entry.doi or entry.doi=="":
                                entry.doi=founddoi
                            else:
                                entry.other_links['doi'].append(founddoi)
                            matched=True
                if not matched:
                    if identifier.idtype=="other":
                        entry.other_links['other'].append(identifier.url)
                    else:
                        print("idtype not found/not matched", identifier.idtype, identifier.url)
        if len(bulklist) == 100:
            with transaction.atomic():
                PureEntry.objects.bulk_update(bulklist, ['doi', 'isbn', 'researchutwente', 'risutwente', 'scopus', 'other_links'])
            bulklist=[]

class Migration(migrations.Migration):
    dependencies = [
        (
            "PureOpenAlex",
            "0010_pureentry_doi_pureentry_isbn_pureentry_other_links_and_more",
        ),
    ]

    operations = [
                migrations.RunPython(move_identifier_data),
    ]
