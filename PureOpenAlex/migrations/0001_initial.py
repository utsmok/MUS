# Generated by Django 5.0 on 2024-01-23 20:43

import django.db.models.deletion
import django_extensions.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Concept",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("concept", models.CharField(max_length=256)),
                ("level", models.IntegerField(null=True)),
                ("score", models.FloatField(null=True)),
                (
                    "data_source",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JournalKeyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keyword", models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keyword", models.CharField(max_length=256)),
                ("score", models.FloatField(null=True)),
                (
                    "data_source",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("is_accepted", models.BooleanField(null=True)),
                ("is_oa", models.BooleanField(null=True)),
                ("is_published", models.BooleanField(null=True)),
                ("license", models.CharField(blank=True, max_length=256)),
                ("landing_page_url", models.CharField(blank=True, max_length=5120)),
                ("is_primary", models.BooleanField()),
                ("is_best_oa", models.BooleanField()),
                ("pdf_url", models.CharField(blank=True, max_length=5120)),
            ],
        ),
        migrations.CreateModel(
            name="AFASData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("isni", models.CharField(blank=True, max_length=256, null=True)),
                ("scopus_id", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "digital_author_id",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("orcid", models.CharField(blank=True, max_length=256, null=True)),
                ("name", models.CharField(blank=True, max_length=256, null=True)),
                ("first_name", models.CharField(blank=True, max_length=256, null=True)),
                ("last_name", models.CharField(blank=True, max_length=256, null=True)),
                ("pub_name", models.CharField(blank=True, max_length=256, null=True)),
                ("known_as", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "former_name",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("is_tcs", models.BooleanField(null=True)),
                (
                    "current_org_unit",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("start_year", models.IntegerField(null=True)),
                ("end_year", models.IntegerField(null=True)),
                ("is_mesa", models.BooleanField(null=True)),
                ("is_dsi", models.BooleanField(null=True)),
                ("is_techmed", models.BooleanField(null=True)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["orcid"], name="PureOpenAle_orcid_4896cf_idx"),
                    models.Index(
                        fields=["is_tcs"], name="PureOpenAle_is_tcs_dd1c46_idx"
                    ),
                    models.Index(
                        fields=["scopus_id"], name="PureOpenAle_scopus__24da7f_idx"
                    ),
                    models.Index(fields=["name"], name="PureOpenAle_name_7b2547_idx"),
                    models.Index(
                        fields=["pub_name"], name="PureOpenAle_pub_nam_dc3c04_idx"
                    ),
                    models.Index(
                        fields=["current_org_unit"],
                        name="PureOpenAle_current_9ed8b1_idx",
                    ),
                    models.Index(
                        fields=["known_as"], name="PureOpenAle_known_a_46597a_idx"
                    ),
                    models.Index(
                        fields=["start_year"], name="PureOpenAle_start_y_3f4905_idx"
                    ),
                    models.Index(
                        fields=["end_year"], name="PureOpenAle_end_yea_65c495_idx"
                    ),
                    models.Index(
                        fields=["is_mesa"], name="PureOpenAle_is_mesa_96207c_idx"
                    ),
                    models.Index(
                        fields=["is_dsi"], name="PureOpenAle_is_dsi_6dcc8a_idx"
                    ),
                    models.Index(
                        fields=["is_techmed"], name="PureOpenAle_is_tech_a59964_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=256, null=True)),
                ("first_name", models.CharField(blank=True, max_length=256, null=True)),
                ("last_name", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("initials", models.CharField(blank=True, max_length=256, null=True)),
                ("orcid", models.CharField(blank=True, max_length=256, null=True)),
                ("is_ut", models.BooleanField()),
                ("faculty", models.CharField(blank=True, max_length=256, null=True)),
                ("department", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "afas_data",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authors",
                        to="PureOpenAlex.afasdata",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Authorship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=256)),
                ("corresponding", models.BooleanField(null=True)),
                (
                    "author_article_name",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                (
                    "author_article_affiliation",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authorships",
                        to="PureOpenAlex.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256)),
                ("faculty", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["faculty"], name="PureOpenAle_faculty_daa380_idx"
                    ),
                    models.Index(fields=["name"], name="PureOpenAle_name_e9848f_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Identifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.CharField(max_length=5120)),
                ("idtype", models.CharField(max_length=256)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["url"], name="PureOpenAle_url_30f646_idx"),
                    models.Index(
                        fields=["idtype"], name="PureOpenAle_idtype_3f0247_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=5120)),
                ("e_issn", models.CharField(blank=True, max_length=256, null=True)),
                ("issn", models.CharField(blank=True, max_length=256, null=True)),
                ("host_org", models.CharField(blank=True, max_length=5120)),
                ("doaj", models.BooleanField(null=True)),
                ("is_oa", models.BooleanField(null=True)),
                ("type", models.CharField(blank=True, max_length=256)),
                ("publisher", models.CharField(blank=True, max_length=5120)),
                ("keywords", models.ManyToManyField(to="PureOpenAlex.journalkeyword")),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256)),
                ("country_code", models.CharField(max_length=256)),
                ("ror", models.CharField(blank=True, max_length=256)),
                ("type", models.CharField(blank=True, max_length=256)),
                (
                    "data_source",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["name"], name="PureOpenAle_name_06513e_idx"),
                    models.Index(fields=["ror"], name="PureOpenAle_ror_223401_idx"),
                ],
            },
        ),
        migrations.AddField(
            model_name="author",
            name="affiliations",
            field=models.ManyToManyField(
                db_index=True, related_name="authors", to="PureOpenAlex.organization"
            ),
        ),
        migrations.CreateModel(
            name="Paper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("openalex_url", models.CharField(max_length=256)),
                ("title", models.CharField(max_length=5120)),
                ("doi", models.CharField(max_length=256)),
                ("year", models.CharField(max_length=256)),
                ("citations", models.IntegerField(blank=True, null=True)),
                ("primary_link", models.CharField(max_length=5120)),
                ("itemtype", models.CharField(max_length=256)),
                ("date", models.CharField(max_length=256)),
                ("openaccess", models.CharField(blank=True, max_length=256)),
                ("language", models.CharField(blank=True, max_length=256)),
                ("abstract", models.TextField()),
                ("pages", models.CharField(blank=True, max_length=256)),
                ("pagescount", models.IntegerField(blank=True, null=True)),
                ("volume", models.CharField(blank=True, max_length=256)),
                ("issue", models.CharField(blank=True, max_length=256)),
                ("is_oa", models.BooleanField(null=True)),
                ("license", models.CharField(blank=True, max_length=256)),
                ("pdf_link_primary", models.CharField(blank=True, max_length=5120)),
                ("apc_listed_value", models.IntegerField(blank=True, null=True)),
                ("apc_listed_currency", models.CharField(blank=True, max_length=256)),
                ("apc_listed_value_usd", models.IntegerField(blank=True, null=True)),
                ("apc_listed_value_eur", models.IntegerField(blank=True, null=True)),
                ("apc_paid_value", models.IntegerField(blank=True, null=True)),
                ("apc_paid_currency", models.CharField(blank=True, max_length=256)),
                ("apc_paid_value_usd", models.IntegerField(blank=True, null=True)),
                ("apc_paid_value_eur", models.IntegerField(blank=True, null=True)),
                ("is_in_pure", models.BooleanField(null=True)),
                ("has_pure_oai_match", models.BooleanField(null=True)),
                ("published_print", models.DateField(blank=True, null=True)),
                ("published_online", models.DateField(blank=True, null=True)),
                ("published", models.DateField(blank=True, null=True)),
                ("issued", models.DateField(blank=True, null=True)),
                ("taverne_date", models.DateField(blank=True, null=True)),
                ("openalex_json", models.JSONField(blank=True, null=True)),
                ("crossref_json", models.JSONField(blank=True, null=True)),
                (
                    "ut_keyword_suggestion",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        db_index=True,
                        related_name="papers",
                        through="PureOpenAlex.Authorship",
                        to="PureOpenAlex.author",
                    ),
                ),
                (
                    "concepts",
                    models.ManyToManyField(
                        db_index=True, related_name="papers", to="PureOpenAlex.concept"
                    ),
                ),
                (
                    "journal",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="papers",
                        to="PureOpenAlex.journal",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        db_index=True, related_name="papers", to="PureOpenAlex.keyword"
                    ),
                ),
                (
                    "locations",
                    models.ManyToManyField(
                        db_index=True, related_name="papers", to="PureOpenAlex.location"
                    ),
                ),
                (
                    "subjects_crossref",
                    models.ManyToManyField(
                        related_name="crossrefpapers", to="PureOpenAlex.concept"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="authorship",
            name="paper",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="authorships",
                to="PureOpenAlex.paper",
            ),
        ),
        migrations.CreateModel(
            name="PureAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=256)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pure_authors",
                        to="PureOpenAlex.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PureEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=5120)),
                ("language", models.CharField(blank=True, max_length=256)),
                ("date", models.CharField(blank=True, max_length=256)),
                ("year", models.CharField(blank=True, max_length=256)),
                ("rights", models.CharField(blank=True, max_length=5120)),
                ("format", models.CharField(blank=True, max_length=256)),
                ("itemtype", models.CharField(blank=True, max_length=256)),
                ("abstract", models.TextField(blank=True)),
                ("source", models.TextField(blank=True)),
                ("publisher", models.CharField(blank=True, max_length=5120)),
                ("ut_keyword", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "contributors",
                    models.ManyToManyField(
                        related_name="pure_entries", to="PureOpenAlex.pureauthor"
                    ),
                ),
                (
                    "creators",
                    models.ManyToManyField(
                        related_name="pure_creators", to="PureOpenAlex.pureauthor"
                    ),
                ),
                (
                    "identifiers",
                    models.ManyToManyField(
                        related_name="pure_entries", to="PureOpenAlex.identifier"
                    ),
                ),
                (
                    "paper",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pure_entries",
                        to="PureOpenAlex.paper",
                    ),
                ),
                (
                    "subject",
                    models.ManyToManyField(
                        related_name="pure_entries", to="PureOpenAlex.concept"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="APIResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("response", models.JSONField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=256, null=True)),
                ("source", models.CharField(blank=True, max_length=256, null=True)),
                ("doi", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "related_paper",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_response",
                        to="PureOpenAlex.paper",
                    ),
                ),
                (
                    "related_pure_entry",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_response",
                        to="PureOpenAlex.pureentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("openalex_url", models.CharField(max_length=256)),
                ("homepage_url", models.CharField(blank=True, max_length=5120)),
                ("display_name", models.CharField(max_length=5120)),
                ("e_issn", models.CharField(blank=True, max_length=256, null=True)),
                ("issn", models.CharField(blank=True, max_length=256, null=True)),
                ("host_org", models.CharField(max_length=5120)),
                ("type", models.CharField(max_length=256)),
                ("is_in_doaj", models.BooleanField(null=True)),
                ("concepts", models.ManyToManyField(to="PureOpenAlex.concept")),
            ],
        ),
        migrations.AddField(
            model_name="location",
            name="source",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="PureOpenAlex.source",
            ),
        ),
        migrations.CreateModel(
            name="UTData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="author_avatars/"
                    ),
                ),
                ("job_title", models.CharField(max_length=256)),
                ("email", models.EmailField(max_length=256)),
                (
                    "departments",
                    models.ManyToManyField(
                        db_index=True,
                        related_name="employees",
                        to="PureOpenAlex.department",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="utdata",
                        to="PureOpenAlex.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="viewPaper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "displayed_paper",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="view_paper",
                        to="PureOpenAlex.paper",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="view_paper",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DealData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("deal_status", models.CharField(max_length=256)),
                ("publisher", models.CharField(max_length=5120)),
                ("jb_url", models.CharField(max_length=5120)),
                ("oa_type", models.CharField(max_length=256)),
                ("journal", models.ManyToManyField(to="PureOpenAlex.journal")),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["publisher"], name="PureOpenAle_publish_fadc55_idx"
                    ),
                    models.Index(
                        fields=["deal_status"], name="PureOpenAle_deal_st_c790ea_idx"
                    ),
                    models.Index(
                        fields=["oa_type"], name="PureOpenAle_oa_type_f36d66_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="journal",
            index=models.Index(fields=["name"], name="PureOpenAle_name_74a975_idx"),
        ),
        migrations.AddIndex(
            model_name="journal",
            index=models.Index(fields=["doaj"], name="PureOpenAle_doaj_17a910_idx"),
        ),
        migrations.AddIndex(
            model_name="journal",
            index=models.Index(fields=["is_oa"], name="PureOpenAle_is_oa_bc75ad_idx"),
        ),
        migrations.AddIndex(
            model_name="journal",
            index=models.Index(
                fields=["publisher"], name="PureOpenAle_publish_68d2fc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="author",
            index=models.Index(fields=["name"], name="PureOpenAle_name_762328_idx"),
        ),
        migrations.AddIndex(
            model_name="author",
            index=models.Index(fields=["is_ut"], name="PureOpenAle_is_ut_2714be_idx"),
        ),
        migrations.AddIndex(
            model_name="author",
            index=models.Index(fields=["orcid"], name="PureOpenAle_orcid_ba75ad_idx"),
        ),
        migrations.AddIndex(
            model_name="author",
            index=models.Index(
                fields=["faculty"], name="PureOpenAle_faculty_eaa6ae_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="author",
            index=models.Index(
                fields=["department"], name="PureOpenAle_departm_3c350a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(fields=["doi"], name="PureOpenAle_doi_4e4bfb_idx"),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(fields=["title"], name="PureOpenAle_title_7fb604_idx"),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["is_in_pure"], name="PureOpenAle_is_in_p_b77ca0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["has_pure_oai_match"], name="PureOpenAle_has_pur_a0fb2c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(fields=["year"], name="PureOpenAle_year_73ca8c_idx"),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(fields=["is_oa"], name="PureOpenAle_is_oa_bda7e8_idx"),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["openaccess"], name="PureOpenAle_openacc_eb4682_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["taverne_date"], name="PureOpenAle_taverne_489dc3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["itemtype"], name="PureOpenAle_itemtyp_60b962_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["license"], name="PureOpenAle_license_a86452_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paper",
            index=models.Index(
                fields=["ut_keyword_suggestion"], name="PureOpenAle_ut_keyw_9514e2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="authorship",
            index=models.Index(
                fields=["author"], name="PureOpenAle_author__751201_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="authorship",
            index=models.Index(fields=["paper"], name="PureOpenAle_paper_i_421339_idx"),
        ),
        migrations.AddIndex(
            model_name="authorship",
            index=models.Index(
                fields=["corresponding"], name="PureOpenAle_corresp_0ca0c7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pureauthor",
            index=models.Index(fields=["name"], name="PureOpenAle_name_d174b7_idx"),
        ),
        migrations.AddIndex(
            model_name="pureauthor",
            index=models.Index(
                fields=["author"], name="PureOpenAle_author__a4ac4e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pureentry",
            index=models.Index(fields=["title"], name="PureOpenAle_title_f31254_idx"),
        ),
        migrations.AddIndex(
            model_name="pureentry",
            index=models.Index(fields=["paper"], name="PureOpenAle_paper_i_bc1157_idx"),
        ),
        migrations.AddIndex(
            model_name="pureentry",
            index=models.Index(fields=["year"], name="PureOpenAle_year_1bc54e_idx"),
        ),
        migrations.AddIndex(
            model_name="pureentry",
            index=models.Index(
                fields=["ut_keyword"], name="PureOpenAle_ut_keyw_cdb70a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pureentry",
            index=models.Index(
                fields=["itemtype"], name="PureOpenAle_itemtyp_b3fade_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apiresponse",
            index=models.Index(fields=["doi"], name="PureOpenAle_doi_2e442b_idx"),
        ),
        migrations.AddIndex(
            model_name="apiresponse",
            index=models.Index(
                fields=["related_paper"], name="PureOpenAle_related_2aa1fe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apiresponse",
            index=models.Index(
                fields=["related_pure_entry"], name="PureOpenAle_related_eb35b0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apiresponse",
            index=models.Index(fields=["source"], name="PureOpenAle_source_814aa0_idx"),
        ),
        migrations.AddIndex(
            model_name="source",
            index=models.Index(
                fields=["display_name"], name="PureOpenAle_display_820e94_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="source",
            index=models.Index(
                fields=["host_org"], name="PureOpenAle_host_or_0048cf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="source",
            index=models.Index(fields=["type"], name="PureOpenAle_type_f9b143_idx"),
        ),
        migrations.AddIndex(
            model_name="source",
            index=models.Index(
                fields=["is_in_doaj"], name="PureOpenAle_is_in_d_41b7e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="source",
            index=models.Index(fields=["issn"], name="PureOpenAle_issn_9e1a7d_idx"),
        ),
        migrations.AddIndex(
            model_name="source",
            index=models.Index(fields=["e_issn"], name="PureOpenAle_e_issn_565b12_idx"),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["source"], name="PureOpenAle_source__b23ba4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["is_primary"], name="PureOpenAle_is_prim_6c957d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["is_best_oa"], name="PureOpenAle_is_best_5ea653_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(fields=["is_oa"], name="PureOpenAle_is_oa_376bf2_idx"),
        ),
        migrations.AddIndex(
            model_name="utdata",
            index=models.Index(
                fields=["employee"], name="PureOpenAle_employe_58b71d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="utdata",
            index=models.Index(fields=["avatar"], name="PureOpenAle_avatar_642117_idx"),
        ),
        migrations.AddIndex(
            model_name="viewpaper",
            index=models.Index(
                fields=["displayed_paper"], name="PureOpenAle_display_ee09cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="viewpaper",
            index=models.Index(fields=["user"], name="PureOpenAle_user_id_54c401_idx"),
        ),
    ]
